{"python3": {"word": "python3", "info": "python3 << EOF\n${0}\nEOF", "snip": "python3 << EOF\n${0}\nEOF", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "python3 << EOF\n${0}\nEOF", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 165, "menu_template": "python3 <<EOF | EOF", "user_data": "{\"snippet\": \"python3 << EOF\\n${0}\\nEOF\"}", "real_name": "python3", "action__pattern": "^snippet\\s\\+python3$", "menu_abbr": "python3 <<EOF | EOF"}, "neobundle": {"word": "neobundle", "info": "NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", "snip": "NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "description": "NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 100, "menu_template": "NeoBundle ''", "menu_abbr": "NeoBundle ''", "real_name": "NeoBundle", "action__pattern": "^snippet\\s\\+NeoBundle$", "user_data": "{\"snippet\": \"NeoBundle '`getreg('+')=='' ? '<\\\\`0\\\\`>' : getreg('+')`'${0}\"}"}, "bundle_hooks": {"word": "bundle_hooks", "info": "let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", "snip": "let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "description": "let s:hooks = neobundle#get_hooks('${1}')\nfunction! s:hooks.on_source(bundle) abort\n${0}\nendfunction\nunlet s:hooks", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 112, "menu_template": "neobundle hooks", "user_data": "{\"snippet\": \"let s:hooks = neobundle#get_hooks('${1}')\\nfunction! s:hooks.on_source(bundle) abort\\n${0}\\nendfunction\\nunlet s:hooks\"}", "real_name": "bundle_hooks", "action__pattern": "^snippet\\s\\+bundle_hooks$", "menu_abbr": "neobundle hooks"}, "b:undo_ftplugin": {"word": "b:undo_ftplugin", "info": "if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", "snip": "if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "description": "if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 144, "menu_template": "if !exists('b:undo_ftplugin')", "menu_abbr": "if !exists('b:undo_ftplugin')", "real_name": "undo_ftplugin", "action__pattern": "^snippet\\s\\+undo_ftplugin$", "user_data": "{\"snippet\": \"if !exists('b:undo_ftplugin')\\nlet b:undo_ftplugin = ''\\nendif\\n\\n${1}\\n\\nlet b:undo_ftplugin .= '\\n\\\\ | setlocal ${2:#:option_name1< option_name2<...}\\n\\\\'\"}"}, "func": {"word": "func", "info": "function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction", "snip": "function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 36, "menu_template": "func endfunc", "menu_abbr": "func endfunc", "real_name": "function", "action__pattern": "^snippet\\s\\+function$", "user_data": "{\"snippet\": \"function! ${1:#:func_name}(${2}) abort\\n${0:TARGET}\\nendfunction\"}"}, "try": {"word": "try", "info": "try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry", "snip": "try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "try\n${1:TARGET}\ncatch /${2:#:pattern}/\n${3}\nendtry", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 44, "menu_template": "try endtry", "user_data": "{\"snippet\": \"try\\n${1:TARGET}\\ncatch /${2:#:pattern}/\\n${3}\\nendtry\"}", "real_name": "try", "action__pattern": "^snippet\\s\\+try$", "menu_abbr": "try endtry"}, "autoload": {"word": "autoload", "info": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "snip": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 120, "menu_template": "autoload func endfunc", "user_data": "{\"snippet\": \"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\\n${0}\\nendfunction\"}", "real_name": "autoload", "action__pattern": "^snippet\\s\\+autoload$", "menu_abbr": "autoload func endfunc"}, "version": {"word": "version", "info": "v:version > ${1} || (v:version == $1 && has('patch${2}'))", "snip": "v:version > ${1} || (v:version == $1 && has('patch${2}'))", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "description": "v:version > ${1} || (v:version == $1 && has('patch${2}'))", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 217, "menu_template": "vim-version-check", "user_data": "{\"snippet\": \"v:version > ${1} || (v:version == $1 && has('patch${2}'))\"}", "real_name": "version", "action__pattern": "^snippet\\s\\+version$", "menu_abbr": "vim-version-check"}, "command": {"word": "command", "info": "command! ${1:#:command_name} call ${2:#:func_name}", "snip": "command! ${1:#:command_name} call ${2:#:func_name}", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "command! ${1:#:command_name} call ${2:#:func_name}", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 73, "menu_template": "command call function", "user_data": "{\"snippet\": \"command! ${1:#:command_name} call ${2:#:func_name}\"}", "real_name": "command", "action__pattern": "^snippet\\s\\+command$", "menu_abbr": "command call function"}, "NeoBundleLazy": {"word": "NeoBundleLazy", "info": "NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", "snip": "NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "description": "NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 105, "menu_template": "NeoBundleLazy ''", "user_data": "{\"snippet\": \"NeoBundleLazy '`getreg('+')=='' ? '<\\\\`0\\\\`>' : getreg('+')`', {\\n\\\\ ${0}\\n\\\\ }\"}", "real_name": "NeoBundleLazy", "action__pattern": "^snippet\\s\\+NeoBundleLazy$", "menu_abbr": "NeoBundleLazy ''"}, "while": {"word": "while", "info": "while ${1:#:condition}\n${0:TARGET}\nendwhile", "snip": "while ${1:#:condition}\n${0:TARGET}\nendwhile", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "while ${1:#:condition}\n${0:TARGET}\nendwhile", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 29, "menu_template": "while endwhile", "user_data": "{\"snippet\": \"while ${1:#:condition}\\n${0:TARGET}\\nendwhile\"}", "real_name": "while", "action__pattern": "^snippet\\s\\+while$", "menu_abbr": "while endwhile"}, "echomsg": {"word": "echomsg", "info": "echomsg string(${1:TARGET})", "snip": "echomsg string(${1:TARGET})", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "echomsg string(${1:TARGET})", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 68, "menu_template": "", "user_data": "{\"snippet\": \"echomsg string(${1:TARGET})\"}", "real_name": "echomsg", "action__pattern": "^snippet\\s\\+echomsg$", "menu_abbr": ""}, "if": {"word": "if", "info": "if ${1:#:condition}\n${0:TARGET}\nendif", "snip": "if ${1:#:condition}\n${0:TARGET}\nendif", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "if ${1:#:condition}\n${0:TARGET}\nendif", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 1, "menu_template": "if endif", "user_data": "{\"snippet\": \"if ${1:#:condition}\\n${0:TARGET}\\nendif\"}", "real_name": "if", "action__pattern": "^snippet\\s\\+if$", "menu_abbr": "if endif"}, "afunc": {"word": "afunc", "info": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "snip": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 120, "menu_template": "autoload func endfunc", "menu_abbr": "autoload func endfunc", "real_name": "autoload", "action__pattern": "^snippet\\s\\+autoload$", "user_data": "{\"snippet\": \"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\\n${0}\\nendfunction\"}"}, "lua": {"word": "lua", "info": "lua << EOF\n${0}\nEOF", "snip": "lua << EOF\n${0}\nEOF", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "lua << EOF\n${0}\nEOF", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 173, "menu_template": "lua <<EOF | EOF", "user_data": "{\"snippet\": \"lua << EOF\\n${0}\\nEOF\"}", "real_name": "lua", "action__pattern": "^snippet\\s\\+lua$", "menu_abbr": "lua <<EOF | EOF"}, "save_option": {"word": "save_option", "info": "let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry", "snip": "let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "let $1_save = &${1}\nlet &$1 = ${2}\ntry\n${0}\nfinally\nlet &$1 = $1_save\nendtry", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 201, "menu_template": "use option save", "user_data": "{\"snippet\": \"let $1_save = &${1}\\nlet &$1 = ${2}\\ntry\\n${0}\\nfinally\\nlet &$1 = $1_save\\nendtry\"}", "real_name": "save_option", "action__pattern": "^snippet\\s\\+save_option$", "menu_abbr": "use option save"}, "loaded": {"word": "loaded", "info": "if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", "snip": "if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 128, "menu_template": "if exists('g:loaded_{plugin-name}')", "menu_abbr": "if exists('g:loaded_{plugin-name}')", "real_name": "g:loaded", "action__pattern": "^snippet\\s\\+g:loaded$", "user_data": "{\"snippet\": \"if exists('g:loaded_${1}')\\nfinish\\nendif\\n\\n${0}\\n\\nlet g:loaded_$1 = 1\"}"}, "g:loaded": {"word": "g:loaded", "info": "if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", "snip": "if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "if exists('g:loaded_${1}')\nfinish\nendif\n\n${0}\n\nlet g:loaded_$1 = 1", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 128, "menu_template": "if exists('g:loaded_{plugin-name}')", "user_data": "{\"snippet\": \"if exists('g:loaded_${1}')\\nfinish\\nendif\\n\\n${0}\\n\\nlet g:loaded_$1 = 1\"}", "real_name": "g:loaded", "action__pattern": "^snippet\\s\\+g:loaded$", "menu_abbr": "if exists('g:loaded_{plugin-name}')"}, "NeoBundle": {"word": "NeoBundle", "info": "NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", "snip": "NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "description": "NeoBundle '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`'${0}", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 100, "menu_template": "NeoBundle ''", "user_data": "{\"snippet\": \"NeoBundle '`getreg('+')=='' ? '<\\\\`0\\\\`>' : getreg('+')`'${0}\"}", "real_name": "NeoBundle", "action__pattern": "^snippet\\s\\+NeoBundle$", "menu_abbr": "NeoBundle ''"}, "p": {"word": "p", "info": "echomsg string([${0:TARGET}])", "snip": "echomsg string([${0:TARGET}])", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "echomsg string([${0:TARGET}])", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 212, "menu_template": "debug-echomsg", "user_data": "{\"snippet\": \"echomsg string([${0:TARGET}])\"}", "real_name": "p", "action__pattern": "^snippet\\s\\+p$", "menu_abbr": "debug-echomsg"}, "function": {"word": "function", "info": "function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction", "snip": "function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "function! ${1:#:func_name}(${2}) abort\n${0:TARGET}\nendfunction", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 36, "menu_template": "func endfunc", "user_data": "{\"snippet\": \"function! ${1:#:func_name}(${2}) abort\\n${0:TARGET}\\nendfunction\"}", "real_name": "function", "action__pattern": "^snippet\\s\\+function$", "menu_abbr": "func endfunc"}, "afunction": {"word": "afunction", "info": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "snip": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\n${0}\nendfunction", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 120, "menu_template": "autoload func endfunc", "menu_abbr": "autoload func endfunc", "real_name": "autoload", "action__pattern": "^snippet\\s\\+autoload$", "user_data": "{\"snippet\": \"function! `substitute(matchstr(neosnippet#util#expand('%:p:r'), '/autoload/\\\\zs.*$'), '/', '#', 'g')`#${1:#:func_name}(${2:#:args}) abort\\n${0}\\nendfunction\"}"}, "ifelse": {"word": "ifelse", "info": "if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif", "snip": "if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "if ${1:#:condition}\n${2:TARGET}\nelse\n${3}\nendif", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 13, "menu_template": "if else endif", "user_data": "{\"snippet\": \"if ${1:#:condition}\\n${2:TARGET}\\nelse\\n${3}\\nendif\"}", "real_name": "ifelse", "action__pattern": "^snippet\\s\\+ifelse$", "menu_abbr": "if else endif"}, "redir": {"word": "redir", "info": "redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END", "snip": "redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "redir => ${1:#:var}\n\t\t${2::TARGET}\n\tredir END", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 93, "menu_template": "redir => var", "user_data": "{\"snippet\": \"redir => ${1:#:var}\\n\\t\\t${2::TARGET}\\n\\tredir END\"}", "real_name": "redir", "action__pattern": "^snippet\\s\\+redir$", "menu_abbr": "redir => var"}, "augroup": {"word": "augroup", "info": "augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END", "snip": "augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "augroup ${1:#:augroup_name}\nautocmd!\nautocmd ${2:#:event}\naugroup END", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 85, "menu_template": "augroup with autocmds", "user_data": "{\"snippet\": \"augroup ${1:#:augroup_name}\\nautocmd!\\nautocmd ${2:#:event}\\naugroup END\"}", "real_name": "augroup", "action__pattern": "^snippet\\s\\+augroup$", "menu_abbr": "augroup with autocmds"}, "tryf": {"word": "tryf", "info": "try\n${1:TARGET}\nfinally\n${2}\nendtry", "snip": "try\n${1:TARGET}\nfinally\n${2}\nendtry", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "try\n${1:TARGET}\nfinally\n${2}\nendtry", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 53, "menu_template": "try ... finally ... endtry", "menu_abbr": "try ... finally ... endtry", "real_name": "tryfinally", "action__pattern": "^snippet\\s\\+tryfinally$", "user_data": "{\"snippet\": \"try\\n${1:TARGET}\\nfinally\\n${2}\\nendtry\"}"}, "save_register": {"word": "save_register", "info": "let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", "snip": "let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "let save_reg_$1 = getreg('${1}')\nlet save_regtype_$1 = getregtype('$1')\ntry\n${0}\nfinally\ncall setreg('$1', save_reg_$1, save_regtype_$1)\nendtry", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 190, "menu_template": "use register save", "user_data": "{\"snippet\": \"let save_reg_$1 = getreg('${1}')\\nlet save_regtype_$1 = getregtype('$1')\\ntry\\n${0}\\nfinally\\ncall setreg('$1', save_reg_$1, save_regtype_$1)\\nendtry\"}", "real_name": "save_register", "action__pattern": "^snippet\\s\\+save_register$", "menu_abbr": "use register save"}, "elseif": {"word": "elseif", "info": "elseif ${1:#:condition}\n${0:TARGET}", "snip": "elseif ${1:#:condition}\n${0:TARGET}", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "elseif ${1:#:condition}\n${0:TARGET}", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 8, "menu_template": "", "user_data": "{\"snippet\": \"elseif ${1:#:condition}\\n${0:TARGET}\"}", "real_name": "elseif", "action__pattern": "^snippet\\s\\+elseif$", "menu_abbr": ""}, "modeline": {"word": "modeline", "info": "\" vim: ${0:foldmethod=marker}", "snip": "\" vim: ${0:foldmethod=marker}", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "description": "\" vim: ${0:foldmethod=marker}", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 140, "menu_template": "\" vim: {modeline}", "user_data": "{\"snippet\": \"\\\" vim: ${0:foldmethod=marker}\"}", "real_name": "modeline", "action__pattern": "^snippet\\s\\+modeline$", "menu_abbr": "\" vim: {modeline}"}, "version_new": {"word": "version_new", "info": "has('patch-${1}')", "snip": "has('patch-${1}')", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "description": "has('patch-${1}')", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 221, "menu_template": "vim-version-check-new", "user_data": "{\"snippet\": \"has('patch-${1}')\"}", "real_name": "version_new", "action__pattern": "^snippet\\s\\+version_new$", "menu_abbr": "vim-version-check-new"}, "neobundlelazy": {"word": "neobundlelazy", "info": "NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", "snip": "NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "description": "NeoBundleLazy '`getreg('+')=='' ? '<\\`0\\`>' : getreg('+')`', {\n\\ ${0}\n\\ }", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 105, "menu_template": "NeoBundleLazy ''", "menu_abbr": "NeoBundleLazy ''", "real_name": "NeoBundleLazy", "action__pattern": "^snippet\\s\\+NeoBundleLazy$", "user_data": "{\"snippet\": \"NeoBundleLazy '`getreg('+')=='' ? '<\\\\`0\\\\`>' : getreg('+')`', {\\n\\\\ ${0}\\n\\\\ }\"}"}, "undo_ftplugin": {"word": "undo_ftplugin", "info": "if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", "snip": "if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 0}, "description": "if !exists('b:undo_ftplugin')\nlet b:undo_ftplugin = ''\nendif\n\n${1}\n\nlet b:undo_ftplugin .= '\n\\ | setlocal ${2:#:option_name1< option_name2<...}\n\\'", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 144, "menu_template": "if !exists('b:undo_ftplugin')", "user_data": "{\"snippet\": \"if !exists('b:undo_ftplugin')\\nlet b:undo_ftplugin = ''\\nendif\\n\\n${1}\\n\\nlet b:undo_ftplugin .= '\\n\\\\ | setlocal ${2:#:option_name1< option_name2<...}\\n\\\\'\"}", "real_name": "undo_ftplugin", "action__pattern": "^snippet\\s\\+undo_ftplugin$", "menu_abbr": "if !exists('b:undo_ftplugin')"}, "for": {"word": "for", "info": "for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor", "snip": "for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "for ${1:#:var} in ${2:#:list}\n${0:TARGET}\nendfor", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 22, "menu_template": "for in endfor", "user_data": "{\"snippet\": \"for ${1:#:var} in ${2:#:list}\\n${0:TARGET}\\nendfor\"}", "real_name": "for", "action__pattern": "^snippet\\s\\+for$", "menu_abbr": "for in endfor"}, "save_pos": {"word": "save_pos", "info": "let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", "snip": "let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "let pos_save = getpos('.')\ntry\n${0}\nfinally\ncall setpos('.', pos_save)\nendtry", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 180, "menu_template": "use pos save", "user_data": "{\"snippet\": \"let pos_save = getpos('.')\\ntry\\n${0}\\nfinally\\ncall setpos('.', pos_save)\\nendtry\"}", "real_name": "save_pos", "action__pattern": "^snippet\\s\\+save_pos$", "menu_abbr": "use pos save"}, "python": {"word": "python", "info": "python << EOF\n${0}\nEOF", "snip": "python << EOF\n${0}\nEOF", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "python << EOF\n${0}\nEOF", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 157, "menu_template": "python <<EOF | EOF", "user_data": "{\"snippet\": \"python << EOF\\n${0}\\nEOF\"}", "real_name": "python", "action__pattern": "^snippet\\s\\+python$", "menu_abbr": "python <<EOF | EOF"}, "customlist": {"word": "customlist", "info": "function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", "snip": "function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\nendfunction", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 78, "menu_template": "customlist complete function", "user_data": "{\"snippet\": \"function! ${1:#:func_name}(arglead, cmdline, cursorpos) abort\\nreturn filter(${2:#:list}, 'stridx(v:val, a:arglead) == 0')\\nendfunction\"}", "real_name": "customlist", "action__pattern": "^snippet\\s\\+customlist$", "menu_abbr": "customlist complete function"}, "py": {"word": "py", "info": "python << EOF\n${0}\nEOF", "snip": "python << EOF\n${0}\nEOF", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "python << EOF\n${0}\nEOF", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 157, "menu_template": "python <<EOF | EOF", "menu_abbr": "python <<EOF | EOF", "real_name": "python", "action__pattern": "^snippet\\s\\+python$", "user_data": "{\"snippet\": \"python << EOF\\n${0}\\nEOF\"}"}, "tryfinally": {"word": "tryfinally", "info": "try\n${1:TARGET}\nfinally\n${2}\nendtry", "snip": "try\n${1:TARGET}\nfinally\n${2}\nendtry", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "try\n${1:TARGET}\nfinally\n${2}\nendtry", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 53, "menu_template": "try ... finally ... endtry", "user_data": "{\"snippet\": \"try\\n${1:TARGET}\\nfinally\\n${2}\\nendtry\"}", "real_name": "tryfinally", "action__pattern": "^snippet\\s\\+tryfinally$", "menu_abbr": "try ... finally ... endtry"}, "catch": {"word": "catch", "info": "catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}", "snip": "catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\}\\}/}", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 63, "menu_template": "catch /pattern/", "user_data": "{\"snippet\": \"catch ${1:/${2:#:pattern: empty, E484, Vim(cmdname):{errmsg\\\\\\\\}\\\\}/}\"}", "real_name": "catch", "action__pattern": "^snippet\\s\\+catch$", "menu_abbr": "catch /pattern/"}, "py3": {"word": "py3", "info": "python3 << EOF\n${0}\nEOF", "snip": "python3 << EOF\n${0}\nEOF", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "python3 << EOF\n${0}\nEOF", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 165, "menu_template": "python3 <<EOF | EOF", "menu_abbr": "python3 <<EOF | EOF", "real_name": "python3", "action__pattern": "^snippet\\s\\+python3$", "user_data": "{\"snippet\": \"python3 << EOF\\n${0}\\nEOF\"}"}, "log": {"word": "log", "info": "echomsg string(${1:TARGET})", "snip": "echomsg string(${1:TARGET})", "options": {"word": 0, "oneshot": 0, "indent": 0, "lspitem": 0, "head": 1}, "description": "echomsg string(${1:TARGET})", "action__path": "/Users/iwamototakayuki/.cache/dein/.cache/init.vim/.dein/neosnippets/vim.snip", "action__line": 68, "menu_template": "", "menu_abbr": "", "real_name": "echomsg", "action__pattern": "^snippet\\s\\+echomsg$", "user_data": "{\"snippet\": \"echomsg string(${1:TARGET})\"}"}}
